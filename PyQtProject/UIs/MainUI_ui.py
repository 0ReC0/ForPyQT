# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(836, 557)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.notLoadDbLabel = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.notLoadDbLabel.setFont(font)
        self.notLoadDbLabel.setObjectName("notLoadDbLabel")
        self.gridLayout.addWidget(self.notLoadDbLabel, 0, 0, 1, 1, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 836, 26))
        self.menuBar.setObjectName("menuBar")
        self.menu_File = QtWidgets.QMenu(self.menuBar)
        self.menu_File.setObjectName("menu_File")
        MainWindow.setMenuBar(self.menuBar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.open_db_action = QtWidgets.QAction(MainWindow)
        self.open_db_action.setObjectName("open_db_action")
        self.save_db_as_action = QtWidgets.QAction(MainWindow)
        self.save_db_as_action.setObjectName("save_db_as_action")
        self.delete_selected_elements_action = QtWidgets.QAction(MainWindow)
        self.delete_selected_elements_action.setObjectName("delete_selected_elements_action")
        self.save_current_table_action = QtWidgets.QAction(MainWindow)
        self.save_current_table_action.setCheckable(False)
        self.save_current_table_action.setObjectName("save_current_table_action")
        self.save_all_tables_action = QtWidgets.QAction(MainWindow)
        self.save_all_tables_action.setObjectName("save_all_tables_action")
        self.menu_File.addAction(self.open_db_action)
        self.menu_File.addAction(self.save_db_as_action)
        self.menuBar.addAction(self.menu_File.menuAction())
        self.toolBar.addAction(self.save_all_tables_action)
        self.toolBar.addAction(self.save_current_table_action)
        self.toolBar.addAction(self.delete_selected_elements_action)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "QtDbEditor"))
        self.notLoadDbLabel.setText(_translate("MainWindow", "Не загружена база данных"))
        self.menu_File.setTitle(_translate("MainWindow", "&File"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.open_db_action.setText(_translate("MainWindow", "Открыть базу данных"))
        self.open_db_action.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.save_db_as_action.setText(_translate("MainWindow", "Сохранить базу данных как"))
        self.save_db_as_action.setToolTip(_translate("MainWindow", "Сохранить базу данных как"))
        self.delete_selected_elements_action.setText(_translate("MainWindow", "Удалить выбранные элементы и обновить таблицу"))
        self.delete_selected_elements_action.setToolTip(_translate("MainWindow", "Удалить выбранные элементы и обновить таблицу"))
        self.delete_selected_elements_action.setShortcut(_translate("MainWindow", "Del"))
        self.save_current_table_action.setText(_translate("MainWindow", "Сохранить текущую таблицу"))
        self.save_all_tables_action.setText(_translate("MainWindow", "Сохранить все таблицы"))
        self.save_all_tables_action.setShortcut(_translate("MainWindow", "Ctrl+S"))
